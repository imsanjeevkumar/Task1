name: Build and Publish to Docker Hub

on:
  push:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_TAG: ${{ github.ref_name == 'master' && 'latest' || github.ref_name | replace('/', '-') }}
  DOCKER_REPO: ersanjeev/task1 # Replace with your Docker Hub repository

jobs:
  build-and-publish:
    name: Build and Publish to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Infer Tag from Branch
        id: infer-tag
        run: |
          if [[ "${{ github.ref_name }}" == "master" ]]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
          else
            sanitized_tag=$(echo "${{ github.ref_name }}" | sed -e 's/\//-/g')
            echo "tag=$sanitized_tag" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile # Update if Dockerfile is in a subdirectory
          pull: true
          push: true
          tags: |
            ${{ env.DOCKER_REPO }}:${{ steps.infer-tag.outputs.tag }}
            ${{ env.DOCKER_REPO }}:${{ github.sha }}

      - name: Update Kube Config
        run: |
          aws eks update-kubeconfig --region eu-central-1 --name eksdemo

      - name: Deploy to EKS
        run: |
          kubectl apply -f ./k8s-manifests/application-deployment.yml
        env:
          KUBECONFIG: ~/.kube/config
